@inject UserProfileService UserSvc
@inject AppState AppState
@implements IDisposable

<div class="col-lg-3">

    <!-- Advanced filter responsive toggler START -->
    <div class="d-flex align-items-center d-lg-none">
        <button class="border-0 bg-transparent" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSideNavbar" aria-controls="offcanvasSideNavbar">
            <i class="btn btn-primary fw-bold fa-solid fa-sliders-h"></i>
            <span class="h6 mb-0 fw-bold d-lg-none ms-2">My profile</span>
        </button>
    </div>
    <!-- Advanced filter responsive toggler END -->
    <!-- Navbar START-->
    <nav class="navbar navbar-expand-lg mx-0">
        <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasSideNavbar">
            <!-- Offcanvas header -->
            <div class="offcanvas-header">
                <button type="button" class="btn-close text-reset ms-auto" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>

            <!-- Offcanvas body -->
            <div class="offcanvas-body d-block px-2 px-lg-0">
                <!-- Card START -->
                <div class="card overflow-hidden">
                    <!-- Cover image -->
                    <div class="h-50px" style="background-image:url(assets/images/bg/01.jpg); background-position: center; background-size: cover; background-repeat: no-repeat;"></div>
                    <!-- Card body START -->
                    <div class="card-body pt-0">
                        <div class="text-center">
                            <!-- Avatar -->
                            <div class="avatar avatar-lg mt-n5 mb-3">
                                <a href="#!"><img class="avatar-img rounded border border-white border-3" src="@(string.IsNullOrEmpty(SelUser.PicUrl)?"assets/images/avatar/07.jpg":SelUser.PicUrl)" alt=""></a>
                            </div>
                            <!-- Info -->
                            <h5 class="mb-0"> <a href="#!">@SelUser?.FullName </a> </h5>
                            <small>@SelUser?.Job</small>
                            <p class="mt-3">@SelUser?.AboutMe</p>

                            <!-- User stat START -->
                            <div class="hstack gap-2 gap-xl-3 justify-content-center">
                                <!-- User stat item -->
                                <div>
                                    <h6 class="mb-0">@(NumberHelper.FormatNumber(SelUser.Posts.Count))</h6>
                                    <small>Post</small>
                                </div>
                                <!-- Divider -->
                                <div class="vr"></div>
                                <!-- User stat item -->
                                <div>
                                    <h6 class="mb-0">@(NumberHelper.FormatNumber(SelUser.FollowedBy.Count))</h6>
                                    <small>Followers</small>
                                </div>
                                <!-- Divider -->
                                <div class="vr"></div>
                                <!-- User stat item -->
                                <div>
                                    <h6 class="mb-0">@(NumberHelper.FormatNumber(SelUser.Follows.Count))</h6>
                                    <small>Following</small>
                                </div>
                            </div>
                            <!-- User stat END -->
                        </div>

                        <!-- Divider -->
                        <hr>

                        <!-- Side Nav START -->
                        <ul class="nav nav-link-secondary flex-column fw-bold gap-2">
                            <li class="nav-item">
                                <a class="nav-link" href="my-profile"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/home-outline-filled.svg" alt=""><span>Feed </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="my-profile-connections"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/person-outline-filled.svg" alt=""><span>Connections </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="blog"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/earth-outline-filled.svg" alt=""><span>Latest News </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="events"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/calendar-outline-filled.svg" alt=""><span>Events </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="groups"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/chat-outline-filled.svg" alt=""><span>Groups </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="notifications"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/notification-outlined-filled.svg" alt=""><span>Notifications </span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="settings"> <img class="me-2 h-20px fa-fw" src="assets/images/icon/cog-outline-filled.svg" alt=""><span>Settings </span></a>
                            </li>
                        </ul>
                        <!-- Side Nav END -->
                    </div>
                    <!-- Card body END -->
                    <!-- Card footer -->
                    <div class="card-footer text-center py-2">
                        <a class="btn btn-link btn-sm" href="my-profile">View Profile </a>
                    </div>
                </div>
                <!-- Card END -->
                <!-- Helper link START -->
                <ul class="nav small mt-4 justify-content-center lh-1">
                    <li class="nav-item">
                        <a class="nav-link" href="my-profile-about">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="settings">Settings</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" target="_blank" href="https://support.Gravicode Studios.com/login">Support </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" target="_blank" href="docs/index">Docs </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="help">Help</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="privacy-and-terms">Privacy & terms</a>
                    </li>
                </ul>
                <!-- Helper link END -->
                <!-- Copyright -->
                <p class="small text-center mt-1">©@Tahun <a class="text-body" target="_blank" href="https://studios.gravicode.com/"> Gravicode Studio </a></p>
            </div>
        </div>
    </nav>
    <!-- Navbar END-->
</div>
@code {
    int Tahun = DateHelper.GetLocalTimeNow().Year;

    public UserProfile SelUser { get; set; }
    string UserName { set; get; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    bool HasLogin = false;
    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;            
            HasLogin = true;
            Refresh();
        }
        AppState.OnPostChange += PostRefresh;
    }

    void Refresh()
    {
        SelUser = UserSvc.GetItemByUsernameFull(UserName);
    }
    void PostRefresh(string Username)
    {
        if (Username == SelUser.Username){
            Refresh();
            StateHasChanged();
        }
    }
    void IDisposable.Dispose()
    {
        AppState.OnPostChange -= PostRefresh;
    }
}

